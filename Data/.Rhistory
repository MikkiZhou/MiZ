nodelabels(myBoots, cex=.6)
temp <- tre2
N <- length(tre2$tip.label)
toCollapse <- match(which(myBoots<70)+N, temp$edge[,2])
temp$edge.length[toCollapse] <- 0
tre3 <- di2multi(temp, tol=0.00001)
plot(tre3, show.tip=FALSE, edge.width=2)
title("NJ tree after collapsing weak nodes")
tiplabels(tre3$tip.label, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5,
+ fg="transparent")
plot(tre3, show.tip=FALSE, edge.width=2)
title("NJ tree after collapsing weak nodes")
tiplabels(tre3$tip.label, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5,
fg="transparent")
axisPhylo()
temp <- pretty(1993:2008, 5)
legend("topright", fill=transp(num2col(temp, col.pal=myPal),.7), leg=temp, ncol=2)
dna2 <- as.phyDat(dna)
class(dna2)
dna2
tre.ini
dna2 <- as.phyDat(dna)
class(dna2)
dna2
tre.ini <- nj(dist.dna(dna,model="raw"))
tre.ini
parsimony(tre.ini, dna2)
tre.pars <- optim.parsimony(tre.ini, dna2)
tre.pars
plot(tre.pars, type="unr", show.tip=FALSE, edge.width=2)
title("Maximum-parsimony tree")
tiplabels(tre.pars$tip.label, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5, fg="transparent")
temp <- pretty(1993:2008, 5)
legend("bottomright", fill=transp(num2col(temp, col.pal=myPal),.7), leg=temp, ncol=2,
+ bg=transp("white"))
plot(tre.pars, type="unr", show.tip=FALSE, edge.width=2)
title("Maximum-parsimony tree")
tiplabels(tre.pars$tip.label, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5, fg="transparent")
temp <- pretty(1993:2008, 5)
legend("bottomright", fill=transp(num2col(temp, col.pal=myPal),.7), leg=temp, ncol=2, bg=transp("white"))
class(dna2)
dna2 <- as.phyDat(dna)
class(dna2)
dna2
> tre.ini
tre.ini <- nj(dist.dna(dna,model="TN93")) tre.ini
dna2 <- as.phyDat(dna)
class(dna2)
dna2
tre.ini <- nj(dist.dna(dna,model="TN93"))
tre.ini
pml(tre.ini, dna2, k=4)
table(as.character(dna2))
na.posi <- which(apply(as.character(dna),2, function(e) any(!e %in% c("a","t","g","c"))))
temp <- apply(as.character(dna),2, function(e) sum(!e %in% c("a","t","g","c")))
plot(temp, type="l", col="blue", xlab="Position in HA segment", ylab="Number of NAs")
dna3
dna3 <- dna[,-na.posi]
dna3
table(as.character(dna3))
dna4 <- as.phyDat(dna3)
fit.ini
dna4 <- as.phyDat(dna3)
tre.ini <- nj(dist.dna(dna3,model="TN93"))
fit.ini <- pml(tre.ini, dna4, k=4)
fit.ini
fit <- optim.pml(fit.ini, optNni=TRUE, optBf=TRUE, optQ=TRUE, optGamma=TRUE)
fit
class(fit)
names(fit)
anova(fit.ini, fit)
AIC(fit.ini)
AIC(fit)
tre4 <- root(fit$tree,1)
tre4 <- ladderize(tre4)
plot(tre4, show.tip=FALSE, edge.width=2)
title("Maximum-likelihood tree")
tiplabels(annot$year, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5,
+ fg="transparent")
tre4 <- root(fit$tree,1)
tre4 <- ladderize(tre4)
plot(tre4, show.tip=FALSE, edge.width=2)
title("Maximum-likelihood tree")
tiplabels(annot$year, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5, fg="transparent")
axisPhylo()
temp <- pretty(1993:2008, 5)
legend("topright", fill=transp(num2col(temp, col.pal=myPal),.7), leg=temp, ncol=2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
billboard_weekly = read_csv("../../data/billboard_2000_weekly.csv")
# Write your code here!
billboard_tracks = billboard_weekly %>% pivot_wider(names_from = week, values_from = rank)
# Write your code here!
billboard_tracks %>% arrange(wk1)
billboard_tracks %>% select(track,wk1) %>% slice_min(wk1)
billboard_dates = read_csv("../../data/billboard_2000_dates.csv")
longest_running_songs = slice_max(billboard_dates, date.of.week, n = 3)
longest_running_songs
View(billboard_dates)
billboard_tracks %>% semi_join(billboard_weekly, join_by(track))
longest_running_songs %>% semi_join(billboard_weekly, join_by(track))
longest_running_songs %>% right_join(billboard_weekly, join_by(track))
View(longest_running_songs)
longest_running_songs %>% right_join(billboard_weekly, join_by(track)) %>% select(artist track, week, rank)
billboard_weekly %>% select(week, rank, artist, track) %>% right_join(longest_running_songs, join_by(week))
billboard_tracks %>% select(week, rank, artist, track) %>% right_join(longest_running_songs, join_by(week))
billboard_tracks %>% select(artist, track, wk53, wk28, wk20) %>% right_join(longest_running_songs, join_by(artist, track))
billboard_tracks %>% select(artist, track, wk76, wk53, wk28, wk20) %>% right_join(longest_running_songs, join_by(artist, track))
billboard_tracks %>% select(artist, track, wk54, wk53, wk28, wk20) %>% right_join(longest_running_songs, join_by(artist, track))
billboard_tracks %>% select(artist, track, wk54, wk53, wk28, wk20) %>% right_join(longest_running_songs, join_by(artist, track))
# Write your code here!
billboard_ %>% mutate(rise = wk1-wk5)
# Write your code here!
billboard_weekly %>% mutate(rise = wk1-wk5)
# Write your code here!
billboard_tracks %>% mutate(rise = wk1-wk5)
# Write your code here!
billboard_tracks %>% select(artist, track, wk1, wk5) %>% mutate(rise = wk1-wk5)
# Write your code here!
billboard_tracks %>% select(artist, track, wk1, wk5) %>% mutate(rise = wk1-wk5) %>% slice_max(rise, 3)
# Write your code here!
billboard_tracks %>% select(artist, track, wk1, wk5) %>% mutate(rise = wk1-wk5) %>% slice_max(rise, n=3)
billboard_tracks %>% mutate(rise = wk1-wk5) %>% slice_max(rise, n=10)
# Write your code here!
billboard_tracks %>% select(artist, track, wk1, wk5) %>% mutate(rise = wk1-wk5) %>% slice_max(rise, n=3)
# Write your code here!
billboard_weekly %>% group_by(track)
# Write your code here!
billboard_weekly %>% group_by(track) %>% count()
# Write your code here!
billboard_weekly %>% filter(rabk == 1)
# Write your code here!
billboard_weekly %>% filter(rank == 1)
# Write your code here!
billboard_weekly %>% filter(rank == 1) %>% arrange(week)
# Write your code here!
billboard_weekly %>% filter(rank == 1) %>% select(track, rank) %>% count(track) %>% slice_max()
# Write your code here!
billboard_weekly %>% filter(rank == 1) %>% select(track, rank) %>% count(track)
# Write your code here!
billboard_weekly %>% filter(rank == 1) %>% select(track, rank) %>% count(track) %>% slice_max(n)
# Write your code here!
billboard_weekly %>% filter(rank == 1) %>% select(track, rank) %>% count(track) %>% slice_max(n, n=5)
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count()
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count() %>% slice_max(n)
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count()
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count() %>% slice_max(n, n=5)
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count() %>% slice_max(n, n=5)
rop_na() %>% count() %>% slice_max(n, n=5)
# Write your code here!
billboard_weekly %>% group_by(track)
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na()
# Write your code here!
billboard_weekly %>% group_by(track)
%>% drop_na()
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na()
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count(track)
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count(track) %>% slice_max(n)
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count(artist,track) %>% slice_max(n, n = 5)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
# Write your code here!
billboard_weekly %>% group_by(track) %>% drop_na() %>% count(artist,track) %>% slice_max(n, n = 5)
# Write your code here!
billboard_weekly%>% drop_na() %>% count(artist,track) %>% slice_max(n, n = 5)
# Write your code here!
billboard_weekly%>% drop_na() %>% count(track) %>% slice_max(n, n = 5)
# Write your code here!
billboard_weekly%>% drop_na() %>% count(artist, track) %>% slice_max(n, n = 5)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(adegenet)
library(phangorn)
library(stats)
library(ade4)
View(drinks)
setwd("~/Desktop/MiZ/data")
dna <- fasta2DNAbin(file="mikkizhou/Desktop/MiZ/data/combined.fna")
dna <- fasta2DNAbin(file=mikkizhou/Desktop/MiZ/data/combined.fna)
dna <- fasta2DNAbin(file= ../mikkizhou/Desktop/MiZ/data/combined.fna)
dna <- fasta2DNAbin(file= .../../mikkizhou/Desktop/MiZ/data/combined.fna)
dna <- fasta2DNAbin(file= ../../mikkizhou/Desktop/MiZ/data/combined.fna)
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fna"
dna <- fasta2DNAbin(file= file_path)
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fna"
dna <- fasta2DNAbin(file= file_path)
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fasta"
dna <- fasta2DNAbin(file= file_path)
View(tre2)
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fasta"
dna <- fasta2DNAbin(file= file_path)
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fasta"
dna <- fasta2DNAbin(file= file_path)
dna <- read.dna(file= file_path)
dna <- read.fasta(file= file_path)
dna <- fasta2DNAbin(file= file_path)
dna
as.character(dna)[1:5, 1:10]
D <- dist.dna(dna, model="TN93")
class(D)
length(D)
tre <- nj(D)
D <- dist.dna(dna, model="TN93")
class(D)
length(D)
temp <- as.data.frame(as.matrix(D))
table.paint(temp, cleg=0, clabel.row=.5, clabel.col=.5)
table.paint(temp, cleg=0, clabel.row=.5, clabel.col=.5)
temp <- as.data.frame(as.matrix(D))
table.paint(temp, cleg=0, clabel.row=.5, clabel.col=.5)
table.paint(temp, cleg=0, clabel.row=.3, clabel.col=.4)
par(mfrow=c(1,1))  # Resets layout to a single plot
par(mar=c(4, 4, 4, 4))  # Sets default margins
table.paint(temp, cleg=0, clabel.row=.3, clabel.col=.4)
temp <- t(as.matrix(D))
temp <- temp[,ncol(temp):1]
par(mar=c(1,5,5,1))
image(x=1:80, y=1:80, temp, col=rev(heat.colors(100)), xaxt="n", yaxt="n",
xlab="",ylab="")
axis(side=3, at=1:80, lab=rownames(dna), las=3, cex.axis=.5)
plot(tre, show.tip=FALSE)
title("Unrooted NJ tree")
myPal <- colorRampPalette(c("red","yellow","green","blue"))
tiplabels(annot$year, bg=num2col(annot$year, col.pal=myPal), cex=.5)
temp <- pretty(1993:2008, 5)
legend("bottomleft", fill=num2col(temp, col.pal=myPal), leg=temp, ncol=2)
axis(side=2, at=1:80, lab=rownames(dna), las=2, cex.axis=.5)
image(x=1:80, y=1:80, temp, col=rev(heat.colors(100)), xaxt="n", yaxt="n",
xlab="",ylab="")
D <- dist.dna(dna, model="TN93")
class(D)
length(D)
temp <- as.data.frame(as.matrix(D))
table.paint(temp, cleg=0, clabel.row=.3, clabel.col=.4)
tre <- nj(D)
plot(tre, show.tip=FALSE)
title("Unrooted NJ tree")
myPal <- colorRampPalette(c("red","yellow","green","blue"))
tiplabels(annot$year, bg=num2col(annot$year, col.pal=myPal), cex=.5)
temp <- pretty(1993:2008, 5)
legend("bottomleft", fill=num2col(temp, col.pal=myPal), leg=temp, ncol=2)
library(ade4)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(adegenet)
library(phangorn)
library(stats)
library(ade4)
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fasta"
dna <- fasta2DNAbin(file= file_path)
D <- dist.dna(dna, model="TN93")
tre <- nj(D)
tre <- njs(D)
dna
class(dna)
as.character(dna)[1:5,1:10]
unclass(dna)[1:5,1:10]
unclass(dna)[1:5,1:10]
typeof(unclass(dna)[1:5,1:10])
object.size(as.character(dna))/object.size(dna)
knitr::opts_chunk$set(echo = TRUE)
install.packages("egg")
# From our theory:
choose(n, k) * p^k * (1-p)^(n-k)
n = 3
k = 1
p = 1/6
# From our theory:
choose(n, k) * p^k * (1-p)^(n-k)
dbinom(k, n, p)
# From our theory:
choose(n, k) * p^k * (1-p)^(n-k)
# From our theory:
choose(n, k) * p^k * (1-p)^(n-k)
n = 200
k = 40
p = 1/6
# From our theory:
choose(n, k) * p^k * (1-p)^(n-k)
dbinom(k, n, p)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
messi_original = read_csv("../../data/Messi_Through_Oct112024_FBRef.csv")
# Write your code here!
messi_original %>% mutate(points = Gls+Ast)
dna <- fasta2DNAbin(file= file_path)
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fasta"
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fasta"
dna <- fasta2DNAbin(file= file_path)
dna
class(dna)
as.character(dna)[1:5, 1:10]
unclass(dna)[1:5, 1:10]
typeof(unclass(dna)[1:5, 1:10])
object.size(as.character(dna))/object.size(dna)
annot <- read.csv("http://adegenet.r-forge.r-project.org/files/usflu.annot.csv", header=TRUE, row.names=1)
head(annot)
dim(dna)
dim(annot)
all(annot$accession==rownames(dna))
table(annot$year)
file_path <- "/Users/mikkizhou/Desktop/MiZ/data/combined.fasta"
dna <- fasta2DNAbin(file= file_path)
dna
class(dna)
as.character(dna)[1:5, 1:10]
unclass(dna)[1:5, 1:10]
typeof(unclass(dna)[1:5, 1:10])
object.size(as.character(dna))/object.size(dna)
file_path <- "/Users/mikkizhou/Desktop/MiZ/results/aligned_clustalw.fasta"
dna <- fasta2DNAbin(file= file_path)
dna
class(dna)
as.character(dna)[1:5, 1:10]
unclass(dna)[1:5, 1:10]
typeof(unclass(dna)[1:5, 1:10])
object.size(as.character(dna))/object.size(dna)
D <- dist.dna(dna, model="TN93")
class(D)
length(D)
temp <- as.data.frame(as.matrix(D))
table.paint(temp, cleg=0, clabel.row=.3, clabel.col=.4)
temp <- t(as.matrix(D))
temp <- temp[,ncol(temp):1]
par(mar=c(1,5,5,1))
image(x=1:80, y=1:80, temp, col=rev(heat.colors(100)), xaxt="n", yaxt="n",
xlab="",ylab="")
axis(side=3, at=1:80, lab=rownames(dna), las=3, cex.axis=.5)
tre <- nj(D)
class(tre)
tre <- nj(D)
class(tre)
tre <- ladderize(tre)
tre
plot(tre, cex=.6)
title("A simple NJ tree")
?read.tree
D <- dist.dna(dna, model="TN93")
class(D)
length(D)
temp <- as.data.frame(as.matrix(D))
table.paint(temp, cleg=0, clabel.row=.3, clabel.col=.4)
temp <- t(as.matrix(D))
temp <- temp[,ncol(temp):1]
par(mar=c(1,5,5,1))
image(x=1:80, y=1:80, temp, col=rev(heat.colors(100)), xaxt="n", yaxt="n",
xlab="",ylab="")
plot(tre, show.tip=FALSE)
title("Unrooted NJ tree")
myPal <- colorRampPalette(c("red","yellow","green","blue"))
tiplabels(annot$year, bg=num2col(annot$year, col.pal=myPal), cex=.5)
temp <- pretty(1993:2008, 5)
legend("bottomleft", fill=num2col(temp, col.pal=myPal), leg=temp, ncol=2)
plot(tre, type="unrooted", show.tip=FALSE)
title("Unrooted NJ tree")
tiplabels(tre$tip.label, bg=num2col(annot$year, col.pal=myPal), cex=.5)
head(annot)
tre2 <- root(tre, out=1)
tre2 <- ladderize(tre2)
#Now rooted:
plot(tre2, show.tip=FALSE, edge.width=2)
title("Rooted NJ tree")
tiplabels(tre$tip.label, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5, fg="transparent")
axisPhylo()
temp <- pretty(1993:2008, 5)
legend("topright", fill=transp(num2col(temp, col.pal=myPal),.7), leg=temp, ncol=2)
mutFromRoot <- as.matrix(dist.dna(dna, model="N"))[1,]
yearFromRoot <- annot$year-annot$year[1]
plot(mutFromRoot~yearFromRoot, xlab="Years from the root",
ylab="Mutations from the root", main="H3N2 molecular clock")
# Write your code here!
messi_original %>% mutate(points = Gls+Ast) %>% summarize(n=points)
messi_original %>% mutate(points = Gls+Ast)
# Write your code here!
messi_original %>% mutate(points = Gls+Ast) %>% summarize(n= count(points))
# Write your code here!
messi_original %>% mutate(points = Gls+Ast) %>% group_by(points) %>% summarize(n= n())
# Write your code here!
messi_original %>% mutate(points = Gls+Ast) %>% group_by(points) %>% summarize(n = n(), percent= n/sum(n))
# Write your code here!
messi_original %>% mutate(points = Gls+Ast) %>% group_by(points) %>% summarize(n = n()) %>% mutate(percent= n/sum(n))
# Write your code here!
messi_original %>% mutate(points = Gls+Ast) %>% group_by(points) %>% summarize(n = n()) %>% mutate(percent= n/sum(n)*100)
# Write your code here!
n_points = messi_original %>% mutate(points = Gls+Ast) %>% group_by(points) %>% summarize(n = n()) %>% mutate(percent= n/sum(n)*100)
View(n_points)
# Write your code here!
n_points %>% summarise(avg= sum(n*points)/sum(n))
# Write your code here!
ggplot(n_points, aes(x = points, y = percent))
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0:6)
)
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0:6)
labels = c(0,1,2,3,4,5,6)
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0:6)
labels = c("0","1","2","3","4","5","6")
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6)
labels = c("0","1","2","3","4","5","6")
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6),
labels = c("0","1","2","3","4","5","6")
)
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6),
labels = c("0","1","2","3","4","5","6")
)+
geom_vline(n_points$avg)
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6),
labels = c("0","1","2","3","4","5","6")
)+
geom_vline(xintercept = n_points$avg)
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6),
labels = c("0","1","2","3","4","5","6")
)+
geom_vline(xintercept = 1.269)
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6),
labels = c("0","1","2","3","4","5","6")
)+
geom_vline(xintercept = 1.269, linetype = "dashed")
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6),
labels = c("0","1","2","3","4","5","6")
)+
geom_vline(xintercept = 1.269, linetype = "dashed", colour = "red")
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6),
labels = c("0","1","2","3","4","5","6")
)+
geom_vline(xintercept = 1.269, linetype = "dashed", colour = "red")+
theme_minimal()
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_discrete(
breaks = c(0,1,2,3,4,5,6))+
geom_vline(xintercept = 1.269, linetype = "dashed", colour = "red")+
theme_minimal()
# Write your code here!
ggplot(n_points, aes(x = points, y = percent)) +
geom_col()+
scale_x_continuous(
breaks = c(0,1,2,3,4,5,6))+
geom_vline(xintercept = 1.269, linetype = "dashed", colour = "red")+
theme_minimal()
# Write your code here!
n_points %>% summarize(var = sum((points-1.269)^2*percent)
# Write your code here!
n_points %>% summarize(var = sum((points-1.269)^2*percent))
# Write your code here!
n_points %>% summarize(var = sum((points-1.269)^2*percent), stdv = sqrt(var))
# Write your code here!
n_points %>% filter(points>1)
# Write your code here!
n_points %>% filter(points>1) %>% sum(percent)
# Write your code here!
n_points %>% filter(points>1) %>% summarize(percent)
# Write your code here!
n_points %>% filter(points>1) %>% summarize(total_per = sum(percent))
