plot(tre2, show.tip.label = TRUE, edge.width = 2)
title("Rooted NJ Tree")
axisPhylo()
plot(tre, type="unrooted", show.tip.label = TRUE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5, adj = c(0.5, 0.5))
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = TRUE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5, adj = c(0.5, 0.5))
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = TRUE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5, adj = c(0.5, 0.5))
plot(tre, type="unrooted", show.tip.label = TRUE, edge.width = 1)
title("Unrooted NJ Tree")
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = TRUE, edge.width = 3)
title("Unrooted NJ Tree")
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
title("Unrooted NJ Tree")
plot(tre, type="unrooted", show.tip.label = TRUE, edge.width = 3)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, offset = 0.5, cex = 0.7)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = TRUE, edge.width = 3)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, offset = 0.5, cex = 0.7)
plot(tre, type="unrooted", show.tip.label = TRUE, edge.width = 3)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.7)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 3)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.7)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.7)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.7, offset = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.2)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 1)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
library(phytools)
install.packages("phytools")
library(phytools)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tre <- rotateConstr(tre, tre$tip.label)  # Rotates nodes for better spacing
spreadLabels(tre, cex = 0.6)
library(phytools)
#Rooting Tree:
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tre <- rotateConstr(tre, tre$tip.label)  # Rotates nodes for better spacing
spreadLabels(tre, cex = 0.6)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tre <- rotateConstr(tre, tre$tip.label)  # Rotates nodes for better spacing
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 1)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
library(phytools)
library(phytools)
tre <- rotateConstr(tre, tre$tip.label)  # Rotate nodes for better spacing
plot(tre, type="unrooted", show.tip.label=TRUE)
title("Unrooted NJ Tree")
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 10)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 0.1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5, offset = 0.8)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
tre <- compute.brlen(tre, method="Grafen")  # Adjust branch lengths
plot(tre, type="unrooted", show.tip.label=TRUE, edge.width=1
tre <- compute.brlen(tre, method="Grafen")  # Adjust branch lengths
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
#Rooted Tree:
plot(tre2, show.tip.label = TRUE, edge.width = 2)
title("Rooted NJ Tree")
axisPhylo()
plot(tre, type="unrooted", show.tip=FALSE)
title("Unrooted NJ tree")
tiplabels(tre$tip.label, bg=num2col(annot$year, col.pal=myPal), cex=.5)
head(annot)
tre2 <- root(tre, out=1)
tre2 <- ladderize(tre2)
#Now rooted:
plot(tre2, show.tip=FALSE, edge.width=2)
title("Rooted NJ tree")
tiplabels(tre$tip.label, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5, fg="transparent")
axisPhylo()
temp <- pretty(1993:2008, 5)
legend("topright", fill=transp(num2col(temp, col.pal=myPal),.7), leg=temp, ncol=2)
#Rooting Tree:
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
#Rooted Tree:
plot(tre2, show.tip.label = TRUE, edge.width = 2)
title("Rooted NJ Tree")
axisPhylo()
if(!"year" %in% colnames(annot)){
stop("annot$year is missing! Define years for your dataset.")
}
mutFromRoot <- as.matrix(dist.dna(dna, model="N"))[1,]
print(mutFromRoot)  # Ensure this produces numeric values
View(dna2)
annot$year <- c(1997, 1997, 1966, 1995, 2016, 2017, 2007, 2007, 2003, 2024)
View(annot)
library(ape)
library(adegenet)
library(phangorn)
library(stats)
library(ade4)
file_path <- "/Users/mikkizhou/Desktop/MiZ/results/aligned_clustalw.fasta"
dna <- fasta2DNAbin(file= file_path)
dna
class(dna)
as.character(dna)[1:5, 1:10]
unclass(dna)[1:5, 1:10]
typeof(unclass(dna)[1:5, 1:10])
object.size(as.character(dna))/object.size(dna)
dim(dna)
D <- dist.dna(dna, model="TN93")
class(D)
length(D)
temp <- as.data.frame(as.matrix(D))
table.paint(temp, cleg=0, clabel.row=.3, clabel.col=.4)
temp <- t(as.matrix(D))
temp <- temp[,ncol(temp):1]
par(mar=c(1,5,5,1))
tre <- nj(D)
class(tre)
tre <- ladderize(tre)
tre
plot(tre, cex=.6)
title("A simple NJ tree")
?read.tree
plot(tre, show.tip.label = TRUE)  # Display tip labels
title("Unrooted NJ Tree")
tiplabels(pch = 21, bg = "lightblue", cex = 0.5)
#Rooting Tree:
plot(tre, type="unrooted", show.tip.label = FALSE, edge.width = 1)
title("Unrooted NJ Tree")
tiplabels(tre$tip.label, cex = 0.5)
tre2 <- root(tre, outgroup = tre$tip.label[1])
tre2 <- ladderize(tre2)
#Rooted Tree:
plot(tre2, show.tip.label = TRUE, edge.width = 2)
title("Rooted NJ Tree")
axisPhylo()
annot$year <- c(1997, 1997, 1966, 1995, 2016, 2017, 2007, 2007, 2003, 2024)
annot$year <- c(1997, 1997, 1966, 1995, 2016, 2017, 2007, 2007, 2003, 2024)  # Example years
annot <- data.frame(year = c(1997, 1997, 1966, 1995, 2016, 2017, 2007, 2007, 2003, 2024))
View(annot)
annot <- data.frame(year = c(1997, 1997, 1966, 1995, 2016, 2017, 2007, 2007, 2003, 2024))
mutFromRoot <- as.matrix(dist.dna(dna, model="N"))[1,]
yearFromRoot <- annot$year - annot$year[1]
annot <- data.frame(year = c(1997, 1997, 1966, 1995, 2016, 2017, 2007, 2007, 2003, 2024))
mutFromRoot <- as.matrix(dist.dna(dna, model="N"))[1,]
yearFromRoot <- annot$year - annot$year[1]
# Plot molecular clock
plot(mutFromRoot ~ yearFromRoot, xlab="Years from the root",
ylab="Mutations from the root", main="H3N2 molecular clock")
# Fit linear model (mutation rate per year)
lm.clock <- lm(mutFromRoot ~ -1 + yearFromRoot)  # Forced through origin
abline(lm.clock, col="blue", lwd=2)
# Model summary
summary(lm.clock)
mutation_rate <- lm.clock$coefficients
print(mutation_rate)
# Normalize by alignment length
mut_per_site <- mutation_rate / ncol(dna)
print(mut_per_site)
# Convert to days
days_per_mutation <- 365 / mutation_rate
print(days_per_mutation)
tre$tip.label
mutFromRoot <- as.matrix(dist.dna(dna, model="N"))[1,]
yearFromRoot <- annot$year-annot$year[1]
plot(mutFromRoot~yearFromRoot, xlab="Years from the root",
ylab="Mutations from the root", main="H3N2 molecular clock")
lm.clock <- lm(mutFromRoot~-1+yearFromRoot)
abline(lm.clock, col="blue",lwd=2)
summary(lm.clock)
lm.clock$coefficients
lm.clock$coefficients/ncol(dna)
365/ lm.clock$coefficients
annot <- data.frame(year = c(1997, 1997, 1966, 1995, 2016, 2017, 2007, 2007, 2003, 2024))
mutFromRoot <- as.matrix(dist.dna(dna, model="N"))[1,]
yearFromRoot <- annot$year - annot$year[1]
# Plot molecular clock
plot(mutFromRoot ~ yearFromRoot, xlab="Years from the root",
ylab="Mutations from the root", main="H3N2 molecular clock")
# Fit linear model (mutation rate per year)
lm.clock <- lm(mutFromRoot ~ -1 + yearFromRoot)  # Forced through origin
abline(lm.clock, col="blue", lwd=2)
# Model summary
summary(lm.clock)
mutation_rate <- lm.clock$coefficients
print(mutation_rate)
# Normalize by alignment length
mut_per_site <- mutation_rate / ncol(dna)
print(mut_per_site)
# Convert to days
days_per_mutation <- 365 / mutation_rate
print(days_per_mutation)
x <- as.vector(D)
y <- as.vector(as.dist(cophenetic(tre2)))
plot(x, y, xlab="original pairwise distances", ylab="pairwise distances on the tree",
main="Is NJ appropriate?", pch=20, col=transp("black",.1), cex=3)
abline(lm(y~x), col="red")
cor(x,y)^2
tre3 <- as.phylo(hclust(D,method="average"))
y <- as.vector(as.dist(cophenetic(tre3)))
plot(x, y, xlab="original pairwise distances", ylab="pairwise distances on the tree",
main="Is UPGMA appropriate?", pch=20, col=transp("black",.1), cex=3)
abline(lm(y~x), col="red")
cor(x,y)^2
plot(tre3, cex=.5)
title("UPGMA tree")
myBoots <- boot.phylo(tre2, dna, function(e) root(nj(dist.dna(e, model = "TN93")),1))
myBoots
plot(tre2, show.tip=FALSE, edge.width=2)
title("NJ tree + bootstrap values")
tiplabels(frame="none", pch=20, col=transp(num2col(annot$year, col.pal=myPal),.7),
cex=3, fg="transparent")
dna2 <- as.phyDat(dna)
class(dna2)
dna2
tre.ini <- nj(dist.dna(dna,model="raw"))
tre.ini
dna2 <- as.phyDat(dna)
class(dna2)
dna2
tre.ini <- nj(dist.dna(dna,model="raw"))
tre.ini
parsimony(tre.ini, dna2)
tre.pars <- optim.parsimony(tre.ini, dna2)
plot(tre.pars, type="unr", show.tip=FALSE, edge.width=2)
title("Maximum-parsimony tree")
tiplabels(tre.pars$tip.label, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5, fg="transparent")
tre.pars
plot(tre.pars, type="unr", show.tip=FALSE, edge.width=2)
title("Maximum-parsimony tree")
tiplabels(tre.pars$tip.label, bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5, fg="transparent")
plot(tre.pars, type="unr", show.tip=FALSE, edge.width=2)
title("Maximum-parsimony tree")
# Plot tip labels without using year-based colors
tiplabels(tre.pars$tip.label, bg="lightblue", cex=0.5)
# Remove or modify the legend if it's not necessary
legend("bottomright", fill="lightblue", leg="Taxa", ncol=1, bg="white")
dna2 <- as.phyDat(dna)
class(dna2)
dna2
tre.ini <- nj(dist.dna(dna,model="TN93"))
tre.ini
pml(tre.ini, dna2, k=4)
table(as.character(dna2))
na.posi <- which(apply(as.character(dna),2, function(e) any(!e %in% c("a","t","g","c"))))
temp <- apply(as.character(dna),2, function(e) sum(!e %in% c("a","t","g","c")))
plot(temp, type="l", col="blue", xlab="Position in HA segment", ylab="Number of NAs")
dna3 <- dna[,-na.posi]
dna3
table(as.character(dna3))
dna4 <- as.phyDat(dna3)
dna4 <- as.phyDat(dna3)
tre.ini <- nj(dist.dna(dna3,model="TN93"))
fit.ini <- pml(tre.ini, dna4, k=4)
fit.ini
fit <- optim.pml(fit.ini, optNni=TRUE, optBf=TRUE, optQ=TRUE, optGamma=TRUE)
fit
class(fit)
names(fit)
anova(fit.ini, fit)
AIC(fit.ini)
AIC(fit)
tre4 <- root(fit$tree,1)
tre4 <- ladderize(tre4)
plot(tre4, show.tip=FALSE, edge.width=2)
title("Maximum-likelihood tree")
tiplabels(bg=transp(num2col(annot$year, col.pal=myPal),.7), cex=.5, fg="transparent")
plot(tre3, cex=.5)
title("UPGMA tree")
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE,
fig.height = 3)
library(tidyverse)
goal_vals <- 1:7
goal_probs <- c(0.335, 0.236, 0.231, NA,
0.066, 0.018, 0.012)
goals <- tibble(goal_vals, goal_probs)
goal_distribution <- ggplot(goals, aes(x = goal_vals, y = goal_probs)) +
geom_segment(aes(xend = goal_vals, yend = 0), color = "blue", size=2) +
geom_hline(yintercept = 0) +
scale_x_continuous(breaks = goal_vals) +
ylab("P(X=x)") +
ggtitle("Distribution of Total Goals per Game") +
annotate("text", x = 4, y = 0.1, label = "?", size = 15, color = "blue")
goal_distribution
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE,
fig.height = 3)
library(tidyverse)
goal_vals <- 1:7
goal_probs <- c(0.335, 0.236, 0.231, NA,
0.066, 0.018, 0.012)
goals <- tibble(goal_vals, goal_probs)
goal_distribution <- ggplot(goals, aes(x = goal_vals, y = goal_probs)) +
geom_segment(aes(xend = goal_vals, yend = 0), color = "blue", size=2) +
geom_hline(yintercept = 0) +
scale_x_continuous(breaks = goal_vals) +
ylab("P(X=x)") +
ggtitle("Distribution of Total Goals per Game") +
annotate("text", x = 4, y = 0.1, label = "?", size = 15, color = "blue")
goal_distribution
View(goal_distribution)
View(goals)
View(goal_distribution)
# Write your code here!
goals %>% sum(goal_probs)
# Write your code here!
goals %>% filter(is.na(goal_probs))
# Write your code here!
goals %>% filter(!is.na(goal_probs))
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>% summarize(goal_probs)
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>% summarize(no_4 = sum(goal_probs))
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>%  mutate("4" = 1-sum(goal_probs))
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>% mutate("4" = 1-sum(goal_probs)) %>% print(4)
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>% mutate("4" = 1-sum(goal_probs))
p4 = 1-sum(goal_probs)
p4 = 1-sum(goal_probs)
```
p4 = 1-sum(goal_probs)
"p4" = 1-sum(goal_probs)
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>% mutate("4" = 1-sum(goal_probs))
"p4" = 1-sum(goal_probs)
print(p4)
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>% mutate("4" = 1-sum(goal_probs))
print(p4)
print(p4)
"p4" = 0.102
print(p4)
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>% mutate("4" = 1-sum(goal_probs))
"p4" = 0.102
print(p4)
goal_vals <- 1:7
goal_probs <- c(0.335, 0.236, 0.231, p4,
0.066, 0.018, 0.012)
View(goals)
# Write your code here!
goals %>% filter(!is.na(goal_probs)) %>% mutate("4" = 1-sum(goal_probs))
p4 = 0.102
print(p4)
goal_vals <- 1:7
goal_probs <- c(0.335, 0.236, 0.231, p4,
0.066, 0.018, 0.012)
View(goals)
# Write your code here!
mean = mean(goal_probs)
# Write your code here!
mean(goal_probs)
# Write your code here!
sum(goal_vals*goal_probs)
# Write your code here!
mean = sum(goal_vals*goal_probs)
# Write your code here!
sum((goal_vals-mean)^2*goal_probs)
# Write your code here!
variance = sum((goal_vals-mean)^2*goal_probs)
# Write your code here!
sqrt(variance)
print(mean)
print(variance)
lectures = read_csv("../../data/Cameron_Lectures_SP24.csv")
View(lectures)
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, boundary(47))
boundary
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1)
bins
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, bins = 47)
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, centre = 47.5)
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, centre = 47.5)
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, boundary = 47)
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, boundary = 47, colour = "blue", fill = "navyblue")
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, boundary = 47, colour = "navyblue", fill = "blue")
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, boundary = 47, colour = "navyblue", fill = "lightblue")
base_minutes = lectures %>% floor(total_minutes)
base_minutes = lectures %>% floor(total_minutes)
floor
?floor
base_minutes = lectures %>% floor(lectures$total_minutes)
base_minutes =  floor(lectures$total_minutes)
View(lectures)
tibble(minutes = base_minutes)
tibble(minutes = base_minutes) %>% group_by(minutes)
tibble(minutes = base_minutes) %>% count()
tibble(minutes = base_minutes)
tibble(minutes = base_minutes, count = n()) %>%
```
base_minutes =  floor(lectures$total_minutes)
tibble(minutes = base_minutes, count = n(minutes) %>%
base_minutes =  floor(lectures$total_minutes)
tibble(minutes = base_minutes, count = n(minutes) )
tibble(minutes = base_minutes, count = n() )
lectures %>% mutate(minutes = base_minutes)
base_minutes =  floor(lectures$total_minutes)
lectures %>% mutate(minutes = base_minutes) %>% group_by(minutes)
base_minutes =  floor(lectures$total_minutes)
lectures %>% mutate(minutes = base_minutes) %>% group_by(minutes) %>% summarize(count = n())
lectures %>% mutate(minutes = base_minutes) %>% group_by(minutes) %>% summarize(n = n())
lectures %>% mutate(minutes = base_minutes) %>% group_by(minutes) %>% summarize(n = n()) %>% mutate(percent = n/sum(n))
lectures %>% mutate(minutes = base_minutes) %>% group_by(minutes) %>% summarize(n = n()) %>% mutate(percent = n/sum(n)*100)
percent = n/sum(n)*100
base_minutes =  floor(lectures$total_minutes)
lectures %>% mutate(minutes = base_minutes) %>% group_by(minutes) %>% summarize(n = n()) %>% mutate(percent = n/sum(n)*100)
mu = mean(lectures$total_minutes)
sigma = sd(lectures$total_minutes)
# Calculation of the shaded left-tail probability
pnorm(42, mu, sigma)
lectures %>% group_by(top_color) %>% summarize(n = n())
lectures %>% group_by(top_color) %>% summarize(n = n(), percentage = n/sum(n))
lectures %>% group_by(top_color) %>% summarize(n = n(), percentage = sum(n))
lectures %>% group_by(top_color) %>% summarize(n = n()) %>% ungroup() %>% mutate(percentage = n/sum(n))
lectures %>% group_by(top_color) %>% summarize(n = n()) %>% ungroup() %>% mutate(percentage = n/sum(n)*100)
ggplot(lectures, aes(x = total_minutes)) +
geom_histogram(binwidth = 1, boundary = 47, colour = "navyblue", fill = "lightblue")
setwd("~/Desktop/MiZ/results")
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(adegenet)
library(phangorn)
library(stats)
library(ade4)
mdl.pl aligned_clustalw.fasta -b 100
library(ape)
mdl.pl aligned_clustalw.fasta -b 100
